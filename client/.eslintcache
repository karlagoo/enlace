[{"/Users/karlagoo/Documents/Github/enlace/client/src/index.js":"1","/Users/karlagoo/Documents/Github/enlace/client/src/App.js":"2","/Users/karlagoo/Documents/Github/enlace/client/src/reportWebVitals.js":"3","/Users/karlagoo/Documents/Github/enlace/client/src/pages/Home.js":"4","/Users/karlagoo/Documents/Github/enlace/client/src/pages/Profile.js":"5","/Users/karlagoo/Documents/Github/enlace/client/src/pages/Login.js":"6","/Users/karlagoo/Documents/Github/enlace/client/src/pages/AboutUs.js":"7","/Users/karlagoo/Documents/Github/enlace/client/src/pages/Chatroom.js":"8","/Users/karlagoo/Documents/Github/enlace/client/src/utils/mutations.js":"9","/Users/karlagoo/Documents/Github/enlace/client/src/utils/queries.js":"10","/Users/karlagoo/Documents/Github/enlace/client/src/utils/auth.js":"11","/Users/karlagoo/Documents/Github/enlace/client/src/components/InfoSection/Data.js":"12","/Users/karlagoo/Documents/Github/enlace/client/src/components/Footer/index.js":"13","/Users/karlagoo/Documents/Github/enlace/client/src/components/Bio/Data.js":"14","/Users/karlagoo/Documents/Github/enlace/client/src/components/LogIn/index.js":"15","/Users/karlagoo/Documents/Github/enlace/client/src/components/SignIn/index.js":"16","/Users/karlagoo/Documents/Github/enlace/client/src/components/InfoSection/index.js":"17","/Users/karlagoo/Documents/Github/enlace/client/src/components/Bio/index.js":"18","/Users/karlagoo/Documents/Github/enlace/client/src/components/Navbar/index.js":"19","/Users/karlagoo/Documents/Github/enlace/client/src/components/Sidebar/index.js":"20","/Users/karlagoo/Documents/Github/enlace/client/src/components/HeroSection/index.js":"21","/Users/karlagoo/Documents/Github/enlace/client/src/components/UserInfo/index.js":"22","/Users/karlagoo/Documents/Github/enlace/client/src/components/InviteBtn/index.js":"23","/Users/karlagoo/Documents/Github/enlace/client/src/components/Calendar/index.js":"24","/Users/karlagoo/Documents/Github/enlace/client/src/components/PenInvs/index.js":"25","/Users/karlagoo/Documents/Github/enlace/client/src/components/PersonalInfo/index.js":"26","/Users/karlagoo/Documents/Github/enlace/client/src/components/Footer/FooterElements.js":"27","/Users/karlagoo/Documents/Github/enlace/client/src/components/Navbar/NavbarElements.js":"28","/Users/karlagoo/Documents/Github/enlace/client/src/components/ButtonElements.js":"29","/Users/karlagoo/Documents/Github/enlace/client/src/components/InfoSection/InfoElements.js":"30","/Users/karlagoo/Documents/Github/enlace/client/src/components/Bio/BioElements.js":"31","/Users/karlagoo/Documents/Github/enlace/client/src/components/Sidebar/SidebarElements.js":"32","/Users/karlagoo/Documents/Github/enlace/client/src/components/HeroSection/HeroElements.js":"33","/Users/karlagoo/Documents/Github/enlace/client/src/components/EventModal/index.js":"34"},{"size":478,"mtime":1675309450759,"results":"35","hashOfConfig":"36"},{"size":1499,"mtime":1675309450740,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1675309450759,"results":"38","hashOfConfig":"36"},{"size":909,"mtime":1675309450759,"results":"39","hashOfConfig":"36"},{"size":878,"mtime":1675309450759,"results":"40","hashOfConfig":"36"},{"size":637,"mtime":1675309450759,"results":"41","hashOfConfig":"36"},{"size":921,"mtime":1675309450759,"results":"42","hashOfConfig":"36"},{"size":5293,"mtime":1675309450759,"results":"43","hashOfConfig":"36"},{"size":2169,"mtime":1675309450759,"results":"44","hashOfConfig":"36"},{"size":1527,"mtime":1675309450759,"results":"45","hashOfConfig":"36"},{"size":714,"mtime":1675309450759,"results":"46","hashOfConfig":"36"},{"size":1795,"mtime":1675309450742,"results":"47","hashOfConfig":"36"},{"size":3458,"mtime":1675309450741,"results":"48","hashOfConfig":"36"},{"size":3229,"mtime":1675309450741,"results":"49","hashOfConfig":"36"},{"size":2960,"mtime":1675309450743,"results":"50","hashOfConfig":"36"},{"size":4135,"mtime":1675309450744,"results":"51","hashOfConfig":"36"},{"size":1642,"mtime":1675309450742,"results":"52","hashOfConfig":"36"},{"size":1072,"mtime":1675309450741,"results":"53","hashOfConfig":"36"},{"size":2325,"mtime":1675309450743,"results":"54","hashOfConfig":"36"},{"size":1571,"mtime":1675309450743,"results":"55","hashOfConfig":"36"},{"size":1506,"mtime":1675309450742,"results":"56","hashOfConfig":"36"},{"size":224,"mtime":1675309450744,"results":"57","hashOfConfig":"36"},{"size":4617,"mtime":1675309450742,"results":"58","hashOfConfig":"36"},{"size":1853,"mtime":1675309450741,"results":"59","hashOfConfig":"36"},{"size":3837,"mtime":1675309450743,"results":"60","hashOfConfig":"36"},{"size":1615,"mtime":1675309450743,"results":"61","hashOfConfig":"36"},{"size":2299,"mtime":1675309450741,"results":"62","hashOfConfig":"36"},{"size":3904,"mtime":1675309450743,"results":"63","hashOfConfig":"36"},{"size":694,"mtime":1675309450741,"results":"64","hashOfConfig":"36"},{"size":2023,"mtime":1675309450742,"results":"65","hashOfConfig":"36"},{"size":1922,"mtime":1675309450741,"results":"66","hashOfConfig":"36"},{"size":1598,"mtime":1675309450743,"results":"67","hashOfConfig":"36"},{"size":2196,"mtime":1675309450742,"results":"68","hashOfConfig":"36"},{"size":4408,"mtime":1675309450741,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pu1izc",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},"/Users/karlagoo/Documents/Github/enlace/client/src/index.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/App.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/reportWebVitals.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/pages/Home.js",["152"],"import React, {useState} from 'react';\nimport { useQuery } from '@apollo/client';\nimport Navbar from '../components/Navbar';\nimport Sidebar from '../components/Sidebar';\nimport HeroSection from '../components/HeroSection';\nimport InfoSection from '../components/InfoSection';\nimport { homeObjOne, homeObjTwo, homeObjThree } from '../components/InfoSection/Data';\nimport Footer from '../components/Footer';\n\n\n\nconst Home = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n  \n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <Sidebar isOpen={isOpen} toggle={toggle} />\n        <Navbar toggle={toggle} />\n        <HeroSection />\n        <InfoSection {...homeObjOne} />\n        <InfoSection {...homeObjTwo} />\n        <InfoSection {...homeObjThree} />\n      </div>\n      <Footer />\n    </main>\n  );\n};\n\nexport default Home;","/Users/karlagoo/Documents/Github/enlace/client/src/pages/Profile.js",["153","154"],"import React, { useState } from 'react';\nimport Calendar from '../components/Calendar';\nimport UserInfo from '../components/UserInfo';\nimport InviteBtn from '../components/InviteBtn';\nimport PenInvs from '../components/PenInvs';\nimport PersonalInfo from '../components/PersonalInfo';\nimport Navbar from '../components/Navbar';\nimport Sidebar from '../components/Sidebar';\nimport { Container } from 'react-bootstrap';\nimport Footer from '../components/Footer/index'\n\n\nconst Profile = () => {\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n\n  return (\n    <Container style={{backgroundColor: \"#02353C\"}}>\n      <Sidebar isOpen={isOpen} toggle={toggle} />\n      <Navbar toggle={toggle} />\n      <PersonalInfo />\n      <Calendar></Calendar>\n      <PenInvs />\n      <Footer />\n    </Container>\n\n\n  )\n}\n\nexport default Profile;","/Users/karlagoo/Documents/Github/enlace/client/src/pages/Login.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/pages/AboutUs.js",["155"],"import React, {useState} from 'react';\nimport { useQuery } from '@apollo/client';\nimport Navbar from '../components/Navbar';\nimport Sidebar from '../components/Sidebar';\nimport Bio from '../components/Bio';\nimport { homeObjOne, homeObjTwo, homeObjThree, homeObjFour } from '../components/Bio/Data';\nimport Footer from '../components/Footer';\n\n\n\nconst AboutUs = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => {\n        setIsOpen(!isOpen);\n    };\n\n    return (\n        <main>\n            <div className=\"flex-row justify-center\">\n                <Sidebar isOpen={isOpen} toggle={toggle} />\n                <Navbar toggle={toggle} />\n                <Bio {...homeObjOne} />\n                <Bio {...homeObjTwo} />\n                <Bio {...homeObjThree} />\n                <Bio {...homeObjFour} />\n            </div>\n            <Footer />\n        </main>\n\n    )\n}\n\nexport default AboutUs;","/Users/karlagoo/Documents/Github/enlace/client/src/pages/Chatroom.js",["156","157","158","159","160","161","162"],"import React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { Form, Row, InputGroup, FormControl } from 'react-bootstrap';\nimport Sidebar from '../components/Sidebar';\nimport { CREATE_MESSAGE } from '../utils/mutations';\nimport { QUERY_CHAT_MESSAGES } from '../utils/queries';\nimport { useMutation, useQuery } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\n\n\nconst ENDPOINT = process.env.PORT || `http://127.0.0.1:3001`;\n\n\nfunction Chatroom(props) {\n  const [createMessage, { error }] = useMutation(CREATE_MESSAGE);\n  const [state, setState] = useState({ message: '' });\n  const [chat, setChat] = useState([]);\n  const socketRef = useRef();\n  const timestamp = Date.now();\n  const editedTimestamp = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp);\n  const roomTitle = props.history.location.state;\n  const [validated, setValidated] = useState(false);\n\n  const { data } = useQuery(QUERY_CHAT_MESSAGES,\n    {\n      variables:\n      {\n        roomName: roomTitle\n      }\n    });\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => {\n        setIsOpen(!isOpen);\n    };\n\n    \n\n  const userToken = Auth.getToken();\n  const userInfo = Auth.getUserInfo(userToken);\n  const userName = userInfo.data.email;\n  const loggedIn = Auth.loggedIn();\n\n  \n\n  useEffect(() => {\n    socketRef.current = io.connect(ENDPOINT)\n    socketRef.current.on(\"message\", ({ message }) => {\n      setChat([...chat, { message, }])\n      console.log(loggedIn)\n\n    })\n    return () => socketRef.current.disconnect()\n  },\n    [chat]\n  );\n\n  useEffect(() => {\n    console.log(roomTitle);\n    if (data) {\n      const initialChat = data.chatroomMessages\n      setChat([...chat, ...initialChat])\n      console.log(data)\n    }\n  }, [data]);\n\n  const messageInput = (e) => {\n    const { value } = e.target\n    setState({ ...state, [e.target.name]: value })\n    const form = e.currentTarget;\n        if (form.checkValidity() === false) {\n            e.stopPropagation();\n        }\n        setValidated(true);\n    console.log(e.target.name)\n  }\n\n  const onMessageSubmit = async (e) => {\n    const { message } = state;\n    e.preventDefault();\n    socketRef.current.emit('message', { message });\n    console.log(userName, message, roomTitle)\n    try {\n      const create = await createMessage(\n        {\n          variables:\n          {\n            message: message,\n            sender: userName,\n            roomName: roomTitle\n          }\n        }\n      )\n      console.log()\n    }\n    catch (err) {\n      console.log(err)\n    }\n  };\n\n\n  const renderMessages = () => {\n    return chat.map((message, index) => (\n      <div key={index} style={{ alignContent: \"left\" }}>\n        {userName===message.sender ? \n        <div>\n          <div className=\"col-7 offset-5\" style={{ backgroundColor: '#449342', borderColor: \"#449342\", borderRadius: \"15px\", textAlign: \"left\", padding: \"1rem\" }}>\n            <span style={{ color: \"white\" }}>{message.message}</span>\n          </div>\n          <p style={{\n            color: \"gray\",\n            fontSize: \"12px\",\n            textAlign: \"right\"\n          }}>Sent by: {message.sender}</p>\n        </div>\n        \n        :\n        <div>\n          <div className=\"col-7\" style={{ backgroundColor: '#3fd0c9', borderColor: \"#449342\", borderRadius: \"15px\", textAlign: \"left\", padding: \"1rem\" }}>\n            <span style={{ color: \"white\" }}>{message.message}</span>\n          </div>\n          <p style={{\n            color: \"gray\",\n            fontSize: \"12px\",\n            textAlign: \"left\"\n          }}>Sent by: {message.sender}</p>\n        </div>\n  }\n      </div>\n    ))\n  }\n\n  const handleFormChange = (e) => {\n\n  }\n\n\n  return (\n    <>\n       <Sidebar isOpen={isOpen} toggle={toggle} />\n       <Navbar toggle={toggle} />\n      <div>\n        <hr />\n        <h1><span style={{ fontStyle: \"italic\" }}>{roomTitle}</span> chat:</h1>\n        <hr />\n        <div style={{\n          color: \"blue\",\n        }}>{renderMessages()}</div>\n\n      </div>\n\n      <Form onSubmit={onMessageSubmit}>\n        {/* Label */}\n        <Form.Group as={Row} className=\"mb-3\" controlId=\"messageForm\">\n\n          <Form.Label column sm=\"2\">\n            Message\n          </Form.Label>\n\n          {/* input */}\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              onChange={messageInput}\n              value={state.message}\n              name=\"message\"\n              placeholder=\"Message\"\n              aria-label=\"Message\"\n              aria-describedby=\"basic-addon2\"\n            />\n            \n            <button style={{ backgroundColor: '#3fd0c9', borderColor: \"#449342\", borderRadius: \"15px\", text: \"white\"}} id=\"send-message\">\n              Send Message\n            </button>\n          </InputGroup>\n            <button style={{ backgroundColor: '#3fd0c9', borderColor: \"#449342\", borderRadius: \"10px\", color: \"white\"}}onClick={() => window.location.assign('/profiles')}>\n              Return to profile\n            </button>\n        </Form.Group>\n\n      </Form>\n      <Footer />\n    </>\n  );\n}\n\n\nexport default Chatroom;","/Users/karlagoo/Documents/Github/enlace/client/src/utils/mutations.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/utils/queries.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/utils/auth.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/InfoSection/Data.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/Footer/index.js",["163","164"],"import React from 'react';\n// Import hooks from React Router\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { GoMarkGithub as Icon } from 'react-icons/go';\nimport { animateScroll as scroll } from 'react-scroll';\nimport logo from '../images/enlace.png';\nimport { Img, ImgWrap } from '../Navbar/NavbarElements';\nimport {FooterContainer, FooterWrap, FooterLinksContainer, FooterLinksWrapper, FooterLinkItems, FooterLinkTitle, FooterLink, SocialMedia, SocialMediaWrap, WebsiteRights, SocialLogo, SocialIcons, SocialIconLink} from './FooterElements';\n\n\nconst Footer = () => {\n  const toggleHome = () => {\n    scroll.scrollToTop();\n  };\n\n  // We retrieve the current `location` object data from React Router\n  const location = useLocation();\n  // We get React Router's history object so we can access and adjust browser history\n  const history = useHistory();\n\n  return (\n    <footer className=\"w-100 mt-auto text-dark p-4\">\n      <div className=\"container text-center mb-5\">\n<FooterContainer>\n          <FooterWrap>\n            <FooterLinksContainer>\n              <FooterLinksWrapper>\n                <FooterLinkItems> \n                  <FooterLinkTitle>About</FooterLinkTitle>\n                  <FooterLink to='/login'>Register</FooterLink>\n                  <FooterLink to='/aboutus'>Meet The Team</FooterLink>\n                </FooterLinkItems>\n                <FooterLinkItems>\n                  <FooterLinkTitle>Contact Us</FooterLinkTitle>\n                  <SocialMedia>\n              <SocialMediaWrap>\n              <SocialIcons>\n                <SocialIconLink\n                target='_blank'\n                aria-label='Github'\n                href='https://github.com/Mheer91'\n              >Michael Heer\n                <Icon />\n              </SocialIconLink>\n              <SocialIconLink\n                target='_blank'\n                aria-label='Github'\n                href='https://github.com/karlagoo'\n              >Karla Goo\n                <Icon />\n              </SocialIconLink>\n              <SocialIconLink\n                target='_blank'\n                aria-label='Github'\n                href='https://github.com/micahwaweru'\n              >Micah Waweru\n                <Icon />\n              </SocialIconLink>\n              <SocialIconLink\n                target='_blank'\n                aria-label='Github'\n                href='https://github.com/Whit1JL'\n              >Jessica White\n                <Icon />\n              </SocialIconLink>\n              <SocialIconLink\n                target='_blank'aria-label='Github' href='https://github.com/Enlace-Team1/enlace'>Enlace GitHub Repository<Icon />\n              </SocialIconLink>\n              </SocialIcons>\n              </SocialMediaWrap>\n            </SocialMedia>\n                </FooterLinkItems>\n              </FooterLinksWrapper>\n            </FooterLinksContainer>\n            <SocialMedia>\n              <SocialMediaWrap>\n              <SocialLogo to='/' onClick={toggleHome}>\n                <ImgWrap>\n                  <Img src={logo} alt={'Enlace'} />\n                </ImgWrap>\n              </SocialLogo>\n              <WebsiteRights>ENLACE &copy; {new Date().getFullYear()} - Michael Heer, Karla Goo, Micah Waweru, and Jessica White\n                </WebsiteRights>\n              </SocialMediaWrap>\n            </SocialMedia>\n          </FooterWrap>\n        </FooterContainer> \n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","/Users/karlagoo/Documents/Github/enlace/client/src/components/Bio/Data.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/LogIn/index.js",["165"],"import React, { useState } from 'react'\nimport { useMutation } from '@apollo/client';\nimport { USER_LOGIN } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\nimport { Container, Form } from 'react-bootstrap';\n\n\nconst LogIn = () => {\n\n    const [userLogIn, { error }] = useMutation(USER_LOGIN);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [validated, setValidated] = useState(false);\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        console.log(name, value)\n\n        return name === 'email' ? setEmail(value) : setPassword(value);\n    };\n\n    const handleValidation = (e) => {\n        const form = e.currentTarget;\n        if (form.checkValidity() === false) {\n            e.stopPropagation();\n        }\n        setValidated(true);\n    }\n\n    const handleFormSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            const response = await userLogIn({\n                variables: { email: email, password: password },\n            });\n\n            const token = response.data.login.token;\n            Auth.login(token);\n\n        }\n        catch (err) {\n            console.log(err);\n        }\n\n    };\n\n    return (\n        <div>\n            <Container>\n                <hr />\n                <h1 className=\"text-white\">Log In</h1>\n                <Form noValidate validated={validated} onChange={handleValidation}>\n                    <Form.Group className=\"mb-3\" controlId=\"email\">\n                        <Form.Label className=\"text-white\">Email</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"email\"\n                            placeholder=\"Enter Email\"\n                            name=\"email\"\n                            onChange={handleInputChange}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">Please enter a valid email address!</Form.Control.Feedback>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"password\">\n                        <Form.Label className=\"text-white\">Password</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"password\"\n                            placeholder=\"Enter Password\"\n                            name=\"password\"\n                            onChange={handleInputChange}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">Please enter a password!</Form.Control.Feedback>\n                    </Form.Group>\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={handleFormSubmit} style={{ backgroundColor: '#449342', borderColor: \"#449342\", borderRadius: \"15px\" }}>Log In!</button>\n                </Form>\n            </Container>\n            <hr />\n        </div>\n    )\n}\n\nexport default LogIn\n","/Users/karlagoo/Documents/Github/enlace/client/src/components/SignIn/index.js",["166","167","168"],"import { useMutation } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { CREATE_USER, USER_LOGIN } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\nimport { Form, Container } from 'react-bootstrap';\n\n\nconst SignUp = () => {\n\nconst [userName, setUsername] = useState('');\nconst [email, setEmail] = useState('');\nconst [password, setPassword] = useState('');\nconst [validated, setValidated] = useState(false);\nconst [addUser, {error}] = useMutation(CREATE_USER);\nconst [userLogIn, { err }] = useMutation(USER_LOGIN);\n\nconst handleInputChange = (e) => {\n    const { value, name } = e.target;\n    \n    \n    if( name === 'userName' ){\n        setUsername(value)\n    } else if( name === 'email' ){\n        setEmail(value)\n    } else if( name === 'password' ){\n        setPassword(value)\n    }\n   \n  };\n\n  const handleValidation = (e) => {\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n        e.stopPropagation();\n    }\n    setValidated(true);\n} \n\n  const handleFormSubmit =  (e) => {\n    e.preventDefault();\n\n    const body = {\n        userName: userName,\n        email: email,\n        password: password\n    }\n    console.log(body)\n\n    try {\n        const { data } =  addUser({\n            variables: { userName, email, password }\n        })\n        .then(async () => {\n            const response  = await userLogIn({\n                variables: { email: email, password: password },\n            });\n    \n            const token = response.data.login.token;\n            Auth.login(token);\n        })\n        .catch((err) => console.log(err))\n    }\n    catch (err) {\n        console.error(err);\n    }\n    \n   \n  };\n\n    return (\n        <div>\n            <Container>\n                <h1 className=\"text-white\">Sign Up</h1>\n                    <Form noValidate validated={validated} onChange={handleValidation}>\n                        <Form.Group className=\"mb-3\" controlId=\"email\">\n                            <Form.Label className=\"text-white\">Email</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"email\"\n                                placeholder=\"Enter Email\"\n                                name=\"email\"\n                                onChange={handleInputChange}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">Please enter a valid email address!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"password\">\n                            <Form.Label className=\"text-white\">Username</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"Enter Username\"\n                                name=\"userName\"\n                                onChange={handleInputChange}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">Please enter a username!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"password\">\n                            <Form.Label className=\"text-white\">Password</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                placeholder=\"Enter Password\"\n                                name=\"password\"\n                                onChange={handleInputChange}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">Please enter a password!</Form.Control.Feedback>\n                        </Form.Group>\n                        <button type=\"submit\" className=\"btn btn-primary\" style={{ backgroundColor: '#449342', borderColor: \"#449342\", borderRadius: \"15px\"}} onClick={handleFormSubmit}>Create Account!</button>\n                    </Form>\n            </Container> \n            <hr/>   \n        </div>\n    )\n}\n\nexport default SignUp;","/Users/karlagoo/Documents/Github/enlace/client/src/components/InfoSection/index.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/Bio/index.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/Navbar/index.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/Sidebar/index.js",["169"],"import React from 'react';\nimport {\n  SidebarContainer,\n  SidebarWrapper,\n  SidebarMenu,\n  SidebarLink,\n  SidebarRoute,\n  SideBtnWrap\n} from './SidebarElements';\nimport Auth from '../../utils/auth';\n\nconst Sidebar = ({ isOpen, toggle }) => {\n\n\n  const loggedIn = Auth.loggedIn();\n  \n  return (\n    <SidebarContainer isOpen={isOpen} onClick={toggle}>\n      {/* <Icon onClick={toggle}>\n        <CloseIcon />\n      </Icon> */}\n      <SidebarWrapper>\n        <SidebarMenu>\n        {/* <SidebarLink\n            to='profile'\n            onClick={toggle}\n            smooth={true}\n            duration={500}\n            spy={true}\n            exact='true'\n            offset={-80}\n          >\n            Profile\n          </SidebarLink> */}\n          <SidebarLink\n            to='aboutUs'\n            onClick={() => window.location.assign('/aboutUs')}\n            smooth={true}\n            duration={500}\n            spy={true}\n            exact='true'\n            offset={-80}\n            \n          >\n            About Us\n          </SidebarLink>\n          <SidebarLink\n            to='login'\n            onClick={loggedIn ? () => window.location.assign('/profiles') : () => window.location.assign('/login')}\n            smooth={true}\n            duration={500}\n            spy={true}\n            exact='true'\n            offset={-80}\n          >\n            {loggedIn ? \"Profile\" : \"Sign In/Sign Up\"}\n          </SidebarLink>\n        </SidebarMenu>\n        <SideBtnWrap>\n        </SideBtnWrap>\n      </SidebarWrapper>\n    </SidebarContainer>\n  );\n};\n\nexport default Sidebar;","/Users/karlagoo/Documents/Github/enlace/client/src/components/HeroSection/index.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/UserInfo/index.js",["170"],"import React, { useState } from 'react';\n\nconst UserInfo = () => {\n    return (\n        <div>\n            {/*Populate data from db*/}\n            <h5>User Info Component</h5>\n        </div>\n    )\n}\n\nexport default UserInfo;\n","/Users/karlagoo/Documents/Github/enlace/client/src/components/InviteBtn/index.js",["171","172","173"],"import { useState } from 'react'\nimport { Form, Modal, Button } from 'react-bootstrap'\nimport { useMutation, useQuery } from '@apollo/client';\nimport { CREATE_EVENT, UPDATE_PLANNED } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\n\nconst InviteBtn = () => {\n    const userToken = Auth.getToken();\n    const userInfo = Auth.getUserInfo(userToken);\n    const userId = userInfo.data._id\n\n    const [addEvent, { error }] = useMutation(CREATE_EVENT);\n\n\n    const [eventState, setEventState] = useState(\n        {\n            title: '',\n            description: '',\n            date: '',\n            time: '',\n        }\n    )\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const createEvent = await addEvent(\n                {\n                    variables:\n                    {\n                        title: eventState.title,\n                        description: eventState.description,\n                        date: eventState.date,\n                        time: eventState.time,\n                        users: [userId]\n                    }\n                }\n            )\n\n            handleClose();\n            window.location.reload();\n            console.log(createEvent)\n            handleClose();\n        }\n        catch (err) {\n            console.log(err)\n        }\n\n    }\n\n\n\n    const handleFormChange = (event) => {\n\n        const { title, value } = event.target;\n\n        setEventState({\n            ...eventState,\n            [title]: value,\n        })\n        console.log(eventState)\n\n    };\n\n\n\n\n    return (\n        <div>\n            {/* <InviteModal show={show} handleClose={handleClose}/> */}\n            <Button style={{ backgroundColor: '#449342', borderColor: \"#449342\", borderRadius: \"15px\"}} className=\"col-12\" onClick={handleShow}>New Event</Button>\n            <Modal show={show}>\n                <Modal.Header closeButton onClick={handleClose} style={{backgroundColor: '#02353C', borderColor: \"#02353C\", color: \"white\"}}>\n                    <Modal.Title style={{backgroundColor: '#02353C', borderColor: \"#02353C\", color: \"white\"}}>New Event</Modal.Title>\n                </Modal.Header>\n                <Modal.Body style={{backgroundColor: '#02353C', color: \"white\"}}>\n                    <Form>\n                        <Form.Group className='mb-3' controlId='eventTitle'>\n                            <Form.Label>Event Name</Form.Label>\n                            <Form.Control type='text' placeholder='My party' title=\"title\" onChange={handleFormChange} />\n                            <Form.Text className='text-muted' >Title Here</Form.Text>\n                        </Form.Group>\n\n                        <Form.Group className='mb-3' controlId='eventDate'>\n                            <Form.Label>Event Date</Form.Label>\n                            <Form.Control type='text' placeholder='YYYY-MM-DD Format ONLY' title=\"date\" onChange={handleFormChange}></Form.Control>\n                            <Form.Text className='text-muted'>Date Here</Form.Text>\n                        </Form.Group>\n\n                        <Form.Group className='mb-3' controlId='eventDesc'>\n                            <Form.Label>Event Description</Form.Label>\n                            <Form.Control type='textarea' rows={3} placeholder='My party is lit' title=\"description\" onChange={handleFormChange} />\n                            <Form.Text className='text-muted'>Description Here</Form.Text>\n                        </Form.Group>\n\n                        <Form.Group className='mb-3' controlId='eventTime'>\n                            <Form.Label>Event Time</Form.Label>\n                            <Form.Control type='text' rows={3} placeholder='3:33pm' title=\"time\" onChange={handleFormChange} />\n                            <Form.Text className='text-muted'>Time Here</Form.Text>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer style={{backgroundColor: '#02353C', borderColor: \"#02353C\", color: \"white\"}}>\n                    <Button style={{ backgroundColor: 'red', borderColor: \"red\", borderRadius: \"15px\"}} onClick={handleClose}>Close</Button>\n                    <Button style={{ backgroundColor: '#449342', borderColor: \"#449342\", borderRadius: \"15px\"}} onClick={handleFormSubmit}>Add Event</Button>\n                </Modal.Footer>\n            </Modal>\n\n        </div>\n    )\n}\n\nexport default InviteBtn;","/Users/karlagoo/Documents/Github/enlace/client/src/components/Calendar/index.js",["174","175"],"import { useState } from 'react'\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport EventModal from '../EventModal'\n\n\nimport { QUERY_EVENTS } from '../../utils/queries'\nimport Auth from '../../utils/auth'\nimport { useQuery } from '@apollo/client'\nimport { Spinner, Button } from 'react-bootstrap'\n\n\n\nconst Calendar = () => {\n\n\n  const userToken = Auth.getToken();\n  const userInfo = Auth.getUserInfo(userToken);\n  const userId = userInfo.data._id\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = (e) => {\n\n    setEvent(\n      e.event._def\n    )\n\n    setShow(true)\n  };\n\n \n  const [currentEvent, setEvent] = useState({});\n\n\n\n  const { data, error } = useQuery(QUERY_EVENTS,\n    {\n      variables: { _id: `${userId}` }\n    });\n\n\n\n  console.log(currentEvent)\n\n  if (data) {\n    return (\n\n      <div style={{backgroundColor: \"white\", color: \"#02353C\", boxShadow: '15px 15px 15px black'}}>\n        <EventModal show={show} handleClose={handleClose} pass={currentEvent} />\n        <FullCalendar\n        style={{backgroundColor: \"white\"}}\n        headerToolbar={\n          {\n            start: \"today\",\n            center: 'title',\n            end: 'prev next'\n          }\n        }\n        eventColor={'#02353C'}\n        eventBackgroundColor={'#449342'}\n        eventBorderColor={'#449342'}\n        eventDisplay={\"block\"}\n        plugins={[ dayGridPlugin ]}\n        initialView={\"dayGridMonth\"}\n        events={data}\n        eventClick={(e)=>{\n          handleShow(e)\n        }}  \n      />\n\n      \n        <hr/>\n      </div>\n    )\n  }\n  else {\n    return (\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </Spinner>\n    )\n  }\n}\n\nexport default Calendar\n","/Users/karlagoo/Documents/Github/enlace/client/src/components/PenInvs/index.js",["176","177"],"import React from 'react';\nimport { ListGroup, Badge, Button, Spinner } from 'react-bootstrap';\nimport { QUERY_PENDING } from '../../utils/queries';\nimport { UPDATE_EVENT_USER, DECLINE_INVITE } from '../../utils/mutations';\nimport { useQuery, useMutation } from '@apollo/client';\nimport Auth from '../../utils/auth';\n\n\nconst PenInvs = () => {\n\n    const userToken = Auth.getToken();\n    const userInfo = Auth.getUserInfo(userToken);\n    const userId = userInfo.data._id;\n    const userEmail = userInfo.data.email;\n\n    const [updateUser, { error }] = useMutation(UPDATE_EVENT_USER);\n    const [declineInvite, { dad }] = useMutation(DECLINE_INVITE);\n    const { data } = useQuery(QUERY_PENDING,\n        {\n            variables: { _id: `${userId}` }\n        });\n\n    const acceptInvite = async (e) => {\n        e.preventDefault();\n        const id = e.target.id;\n        console.log(\"hey dad\", e.target.id, userEmail)\n        try {\n            const update = await updateUser(\n                {\n                    variables: {\n                        _id: id,\n                        userId: userId\n                    }\n                }\n            )\n            const updateDecline = await declineInvite(\n                {\n                    variables: {\n                        _id: id,\n                        email: userEmail\n                    }\n                }\n            )\n            console.log(update, updateDecline)\n            window.location.reload()\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n\n    const declinePending = async (e) => {\n        e.preventDefault();\n        const id = e.target.id;\n        console.log(id)\n        try {\n            const update = await declineInvite(\n                {\n                    variables: {\n                        _id: id,\n                        email: userEmail\n                    }\n                }\n            )\n            console.log(update)\n            window.location.reload()\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n\n\n    if (data) {\n        return (\n            <div>\n                <hr/>\n                {data.pendingInvites.pendingInvites.length ? <h1 id=\"pendingInvites\">Pending Invites</h1> : <h1 id=\"pendingInvites\">No pending invites!</h1>}\n                {data.pendingInvites.pendingInvites.map((event) => (<ListGroup as=\"ol\" numbered>\n                    <ListGroup.Item\n                        as=\"ul\"\n                        className=\"d-flex justify-content-between align-items-start\"\n                        style={{ backgroundColor: 'white', color: 'black', boxShadow: '15px 15px 15px black'}}\n                    >\n                        <div className=\"ms-2 me-auto\">\n                            <div className=\"fw-bold\">{event.title}</div>\n                            <div>On {event.date}, at {event.time}</div>\n                            <div>{event.description}</div>\n                            <div>Invited by:</div>\n                            <Button onClick={acceptInvite} id={event._id}>Accept Event Invite</Button>\n                            <Button onClick={declinePending} id={event._id}>Decline Event Invite</Button>\n                            <Button onClick={() => console.log(data)} id={event._id}>Decline Event Invite</Button>\n                        </div>\n                        <Badge variant=\"primary\" pill>\n                            {event.date} people attending\n                        </Badge>\n                    </ListGroup.Item>\n                    <hr/>\n                </ListGroup>))}\n            </div>\n        )\n    }\n    else {\n        return (\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>\n        )\n    }\n};\n\nexport default PenInvs;\n","/Users/karlagoo/Documents/Github/enlace/client/src/components/PersonalInfo/index.js",["178","179"],"import React, { useEffect } from 'react'\nimport Auth from '../../utils/auth';\nimport { Alert, Button, Container, Spinner } from 'react-bootstrap';\nimport InviteBtn from '../InviteBtn';\nimport { QUERY_PENDING } from '../../utils/queries';\nimport { useQuery } from '@apollo/client';\n\nconst PersonalInfo = () => {\n    const userToken = Auth.getToken();\n    const userInfo = Auth.getUserInfo(userToken);\n    const userName = userInfo.data.userName;\n    const userId = userInfo.data._id\n\n\n\n    const { data, error } = useQuery(QUERY_PENDING,\n        {\n            variables: { _id: `${userId}` }\n        });\n\n    if (data) {\n        return (\n            <Alert className=\"col-12 col-lg-4 \" style={{ backgroundColor: '#02353C', borderColor: \"#02353C\", color: 'white' }}>\n                <Alert.Heading style={{fontWeight: \"bolder\"}}>Welcome back, {userName}!</Alert.Heading>\n                <p style={{fontStyle: 'italic'}}>\n                    You have {data.pendingInvites.pendingInvites.length} pending invites.\n                </p>\n                <hr />\n                <Container >\n                    <Button className=\"col-12\" style={{ backgroundColor: '#449342', borderColor: \"#449342\", borderRadius: \"15px\" }} href=\"#pendingInvites\">See Pending Invites</Button>\n                    <hr />\n                    <InviteBtn />\n                </Container>\n            </Alert>\n        )\n    }\n    else {\n        return (\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>\n        )\n    }\n}\n\nexport default PersonalInfo;\n","/Users/karlagoo/Documents/Github/enlace/client/src/components/Footer/FooterElements.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/Navbar/NavbarElements.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/ButtonElements.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/InfoSection/InfoElements.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/Bio/BioElements.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/Sidebar/SidebarElements.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/HeroSection/HeroElements.js",[],"/Users/karlagoo/Documents/Github/enlace/client/src/components/EventModal/index.js",["180","181"],"import { useState } from 'react'\nimport { Button, Modal, Form, ListGroup } from 'react-bootstrap'\nimport { QUERY_ALL_USERS } from '../../utils/queries';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { UPDATE_PENDING } from '../../utils/mutations';\nimport { useHistory } from 'react-router-dom';\n\n\nconst EventModal = (props) => {\n  const history = useHistory();\n  const title = props.pass.title;\n\n  const [userState, setUserState] = useState([\n    {\n      id: ''\n    }\n  ]);\n\n  const { data } = useQuery(QUERY_ALL_USERS)\n  const [updateUsers, { error }] = useMutation(UPDATE_PENDING)\n \n    const testChat = (e)=>{\n      e.preventDefault();\n      history.push({\n        pathname: '/chatroom',\n        state: title,\n        \n      })\n      console.log(props.pass.title)\n \n    }\n\n\n\n  const invite =  (e) => {\n    e.preventDefault();\n    console.log(userState)\n    const eventId = e.target.id;\n    console.log(\"test invite\", eventId, userState)\n\n    try {\n      userState.forEach((user) => {\n        console.log(eventId, user)\n        const update = updateUsers(\n          {\n            variables:\n            {\n              _id: eventId,\n              userId: user\n            }\n          }\n        )\n      })    \n    }\n    catch (err) {\n      console.log(err)\n    }\n\n\n    props.handleClose();\n  };\n\n  const handleFormSelect = (e) => {\n    e.preventDefault();\n\n    setUserState([].slice.call(e.target.selectedOptions).map((user) => user.value))\n\n  }\n\n\n\n  if (props.show) {\n    console.log(props.pass);\n\n    return (\n      <>\n\n        <div>\n\n          <Modal show={props.show} >\n            <Modal.Header style={{ backgroundColor: '#02353C', borderColor: \"#02353C\", color: 'white'}} closeButton onClick={props.handleClose}>\n              <Modal.Title>{props.pass.title} {props.pass.extendedProps.date}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ backgroundColor: '#02353C', color: 'white'}}>\n              <ListGroup >\n                <ListGroup.Item style={{backgroundColor: '#449342', color: \"white\", fontWeight: \"bold\"}}>Time:</ListGroup.Item>\n                <ListGroup.Item style={{backgroundColor: '#449342', color: \"white\", fontStyle: \"italic\"}}>{props.pass.extendedProps.time}</ListGroup.Item>\n                <ListGroup.Item style={{backgroundColor: '#449342', color: \"white\", fontWeight: \"bold\"}} >Description:</ListGroup.Item>\n                <ListGroup.Item style={{backgroundColor: '#449342', color: \"white\", fontStyle: \"italic\"}}><p>{props.pass.extendedProps.description}</p></ListGroup.Item>\n                <ListGroup.Item style={{backgroundColor: '#449342', color: \"white\", fontWeight: \"bold\"}}>Attendees:</ListGroup.Item>\n                <ListGroup.Item style={{backgroundColor: '#449342', color: \"white\", fontStyle: \"italic\"}}>\n                  <ul>\n                    {props.pass.extendedProps.users.map((user) =>\n                      <li key={user._id}>{user.userName}</li>)}\n                  </ul>\n                </ListGroup.Item>\n              </ListGroup>\n              <Form.Group controlId=\"my_multiselect_field\"  style={{ backgroundColor: '#02353C', borderColor: \"#02353C\", color: 'white'}}>\n                <hr/>\n              <Modal.Title>Select Users to Invite</Modal.Title>\n              <hr/>\n              <Form.Control as=\"select\"style={{ backgroundColor: '#449342', borderColor: \"#02353C\", color: 'white'}} multiple onChange={handleFormSelect}>\n                {data.allUsers.map((user) =>\n                  <option key={user._id} value={user._id}>{user.userName}</option>\n                )}\n              </Form.Control>\n              <Form.Text className=\"text-muted\">\n                Hold CTRL and click user names to select multiple users.\n              </Form.Text>\n            </Form.Group>\n            </Modal.Body>\n            <Modal.Footer style={{ backgroundColor: '#02353C', borderColor: \"#02353C\", color: 'white'}}>\n              <Button style={{ backgroundColor: '#449342', borderColor: \"#449342\", borderRadius: \"15px\"}} id={props.pass.extendedProps._id} onClick={invite} >\n                Invite\n              </Button>\n              <Button onClick={testChat} style={{ backgroundColor: '#449342', borderColor: \"#449342\", borderRadius: \"15px\"}}>Event Chat</Button>\n            </Modal.Footer>\n          </Modal>))\n\n\n        </div>\n      </>\n    )\n  }\n  else {\n    return null;\n  }\n}\n\nexport default EventModal\n",{"ruleId":"182","severity":1,"message":"183","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":18},{"ruleId":"182","severity":1,"message":"186","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":16},{"ruleId":"182","severity":1,"message":"187","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":17},{"ruleId":"182","severity":1,"message":"183","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":18},{"ruleId":"182","severity":1,"message":"188","line":17,"column":27,"nodeType":"184","messageId":"185","endLine":17,"endColumn":32},{"ruleId":"182","severity":1,"message":"189","line":22,"column":9,"nodeType":"184","messageId":"185","endLine":22,"endColumn":24},{"ruleId":"182","severity":1,"message":"190","line":24,"column":10,"nodeType":"184","messageId":"185","endLine":24,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":58,"column":5,"nodeType":"193","endLine":58,"endColumn":11,"suggestions":"194"},{"ruleId":"191","severity":1,"message":"195","line":68,"column":6,"nodeType":"193","endLine":68,"endColumn":12,"suggestions":"196"},{"ruleId":"182","severity":1,"message":"197","line":87,"column":13,"nodeType":"184","messageId":"185","endLine":87,"endColumn":19},{"ruleId":"182","severity":1,"message":"198","line":136,"column":9,"nodeType":"184","messageId":"185","endLine":136,"endColumn":25},{"ruleId":"182","severity":1,"message":"199","line":17,"column":9,"nodeType":"184","messageId":"185","endLine":17,"endColumn":17},{"ruleId":"182","severity":1,"message":"200","line":19,"column":9,"nodeType":"184","messageId":"185","endLine":19,"endColumn":16},{"ruleId":"182","severity":1,"message":"188","line":10,"column":25,"nodeType":"184","messageId":"185","endLine":10,"endColumn":30},{"ruleId":"182","severity":1,"message":"188","line":14,"column":18,"nodeType":"184","messageId":"185","endLine":14,"endColumn":23},{"ruleId":"182","severity":1,"message":"201","line":15,"column":21,"nodeType":"184","messageId":"185","endLine":15,"endColumn":24},{"ruleId":"182","severity":1,"message":"202","line":50,"column":17,"nodeType":"184","messageId":"185","endLine":50,"endColumn":21},{"ruleId":"182","severity":1,"message":"203","line":7,"column":3,"nodeType":"184","messageId":"185","endLine":7,"endColumn":15},{"ruleId":"182","severity":1,"message":"204","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"183","line":3,"column":23,"nodeType":"184","messageId":"185","endLine":3,"endColumn":31},{"ruleId":"182","severity":1,"message":"205","line":4,"column":24,"nodeType":"184","messageId":"185","endLine":4,"endColumn":38},{"ruleId":"182","severity":1,"message":"188","line":12,"column":24,"nodeType":"184","messageId":"185","endLine":12,"endColumn":29},{"ruleId":"182","severity":1,"message":"206","line":10,"column":19,"nodeType":"184","messageId":"185","endLine":10,"endColumn":25},{"ruleId":"182","severity":1,"message":"188","line":38,"column":17,"nodeType":"184","messageId":"185","endLine":38,"endColumn":22},{"ruleId":"182","severity":1,"message":"188","line":16,"column":26,"nodeType":"184","messageId":"185","endLine":16,"endColumn":31},{"ruleId":"182","severity":1,"message":"207","line":17,"column":29,"nodeType":"184","messageId":"185","endLine":17,"endColumn":32},{"ruleId":"182","severity":1,"message":"208","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"188","line":16,"column":19,"nodeType":"184","messageId":"185","endLine":16,"endColumn":24},{"ruleId":"182","severity":1,"message":"188","line":20,"column":25,"nodeType":"184","messageId":"185","endLine":20,"endColumn":30},{"ruleId":"182","severity":1,"message":"209","line":44,"column":15,"nodeType":"184","messageId":"185","endLine":44,"endColumn":21},"no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'UserInfo' is defined but never used.","'InviteBtn' is defined but never used.","'error' is assigned a value but never used.","'editedTimestamp' is assigned a value but never used.","'validated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedIn'. Either include it or remove the dependency array.","ArrayExpression",["210"],"React Hook useEffect has missing dependencies: 'chat' and 'roomTitle'. Either include them or remove the dependency array. You can also do a functional update 'setChat(c => ...)' if you only need 'chat' in the 'setChat' call.",["211"],"'create' is assigned a value but never used.","'handleFormChange' is assigned a value but never used.","'location' is assigned a value but never used.","'history' is assigned a value but never used.","'err' is assigned a value but never used.","'data' is assigned a value but never used.","'SidebarRoute' is defined but never used.","'useState' is defined but never used.","'UPDATE_PLANNED' is defined but never used.","'Button' is defined but never used.","'dad' is assigned a value but never used.","'useEffect' is defined but never used.","'update' is assigned a value but never used.",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [chat, loggedIn]",{"range":"216","text":"217"},"Update the dependencies array to be: [chat, data, roomTitle]",{"range":"218","text":"219"},[1765,1771],"[chat, loggedIn]",[1966,1972],"[chat, data, roomTitle]"]